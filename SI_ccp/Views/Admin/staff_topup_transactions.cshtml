@using MvcPaging
@model SI_ccp.Models.staff_msisdn_admin_model

@{
    ViewBag.Title = "Staff Topup Transactions";

    var listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem { Text = "All", Value = "" });
    listItems.Add(new SelectListItem { Text = "Success", Value = "true" });
    listItems.Add(new SelectListItem { Text = "Pending", Value = "false" });
}


<section id="widget-grid" style="margin: 0px auto;">
    <!-- START ROW -->
    <div class="row">
        <!-- NEW COL START -->
        <article class="col-sm-12 col-md-12 col-lg-6" style="float: none; margin: 5px auto; width: 100%;">
            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget" id="wid-id-3" data-widget-editbutton="false" data-widget-custombutton="false">
                <header>
                    <span class="widget-icon"><i class="fa fa-edit"></i></span>
                    <h2>Search</h2>
                </header>
                <!-- widget div-->
                <div>
                    <!-- widget edit box -->
                    <div class="jarviswidget-editbox">
                        <!-- This area used as dropdown edit box -->
                    </div>
                    <!-- end widget edit box -->
                    <!-- widget content -->
                    <div class="widget-body no-padding">
                        @using (Ajax.BeginForm("staff_topup_transactions", "Admin",
                            new AjaxOptions { UpdateTargetId = "grid-list", HttpMethod = "get", LoadingElementId = "loading", OnBegin = "beginPaging", OnSuccess = "successPaging", OnFailure = "failurePaging" },
                            new { id = "from-staff_topup_transactions", @class = "smart-form" }))
                        {
                            <fieldset>
                                <div class="row">
                                    <section class="col col-3">
                                        <b>Company Name</b>
                                        <label class="select">
                                            @Html.DropDownListFor(model => model.company_id, new SelectList(Model.company_list, "id", "company_name"), "-- All --")<i></i>
                                        </label>
                                    </section>
                                    <section class="col col-2">
                                        <b>Recharge Status:</b>
                                        <label class="select">
                                            @Html.DropDownListFor(model => model.rec_status, new SelectList(listItems, "Value", "Text"))<i></i>
                                        </label>
                                    </section>
                                    @{ string sdt = ViewData["sdate"] != null ? ViewData["sdate"].ToString() : string.Empty;
                                        string edt = ViewData["edate"] != null ? ViewData["edate"].ToString() : string.Empty; }
                                    <section class="col col-2">
                                        <b>Start Date:</b>
                                        <label class="input">
                                            @Html.TextBox("sdate", "", new { @placeholder = "Date From", Value = sdt, @readonly = true })
                                        </label>
                                    </section>
                                    <section class="col col-2">
                                        <b>End Date:</b>
                                        <label class="input">
                                            @Html.TextBox("edate", "", new { @placeholder = "Date To", Value = edt, @readonly = true })
                                        </label>
                                    </section>
                                    <section class="col col-2">
                                        <b>Mobile Number:</b>
                                        <label class="input">
                                            @Html.TextBoxFor(model => model.mobile_number, new { @maxlegth = 50 })
                                        </label>
                                    </section>
                                    <section class="col col-2">
                                        <b>Sales Person :</b>
                                        <label class="select">
                                            <i class="icon-append fa fa-envelope-o"></i>
                                            @Html.DropDownListFor(model => model.sales_person_id, new SelectList(ViewBag.SalesPerson, "Id", "fullName"), "--- Select ---")<i></i>
                                        </label>
                                    </section>
                                    <section class="col col-3">
                                        <br />
                                        <button type="submit" id="btnsubmit" class="btn btn-primary" style="padding: 5px;">
                                            Search
                                        </button>
                                        &nbsp;&nbsp;
                                        <button type="button" class="btn btn-primary" onclick="window.location = '/Admin/staff_topup_transactions';" style="padding: 5px;">Reset</button>
                                    </section>
                                </div>
                                <div class="row">

                                </div>
                            </fieldset>
                        }
                    </div>
                    <!-- end widget content -->
                </div>
                <!-- end widget div -->
            </div>
            <!-- end widget -->
        </article>
        <!-- END COL -->
    </div>
    <!-- END ROW -->
</section>


@*@if (Model.Count() > 0)
    {
        <div class="export_pan">
            <a href="@Url.Action("companiescsvlist", "Admin")">
                <img src="~/img/grid/Csv-icon.png" alt="Export to csv" border="0" />
            </a>
        </div>
    }*@

<div class="jarviswidget jarviswidget-color-blueDark" id="wid-id-2" data-widget-editbutton="false">
    <header>
        <span class="widget-icon"><i class="fa fa-table"></i></span>
        <h2 id="widget_title">Staff Topup</h2>
    </header>
    <!-- widget div-->
    <div>
        <!-- widget edit box -->
        <div class="jarviswidget-editbox">
            <!-- This area used as dropdown edit box -->
        </div>
        <!-- end widget edit box -->
        @if (Model.company_list != null && Model.company_list.Count > 0)
        {
            <div class="export_pan" style="width:100%; text-align:right; padding-bottom:5px;">
                <a href="@Url.Action("staff_topup_transactions_csv", "Admin")">
                    <img src="~/img/grid/Csv-icon.png" alt="Export to csv" border="0" />
                </a>
            </div>
        }

        <div id="grid-list">
            @if (Model!=null && Model.staffs_topup_list != null)
            {
                { Html.RenderPartial("_ajax_staff_topup", Model.staffs_topup_list); }
            }
            else
            {
                <div style="width: 100%; text-align: center; padding: 10px 0px 10px 0px;">Records Not found!</div>
            }
        </div>
        <div id="progress_panel" class="widget-body" style="display: none; text-align: center;">
            <img src="~/img/ajax-loader.gif" alt="Loading.." style="margin: 15px 0px 15px 0px;" />
        </div>
    </div>
</div>
<!-- end widget div -->

<!-- Delete dialog Begin -->
<div id="delete-dialog" title="Confirmation" style="display: none;">
    <p>Are you sure want to delete this staff topup ?</p>
</div>
<!-- Delete dialog End -->


@section Scripts {

<script type="text/javascript">

    $(document).ready(function () {
        $("#sdate").datepicker({
            dateFormat: "dd/mm/yy",
            changeMonth: true,
            changeYear: true,
            yearRange: "-104:+0",
            beforeShow: function () {
                jQuery(this).datepicker('option', 'maxDate', jQuery('#edate').val(), 'dd/mm/yy');
            }
        });

        $("#edate").datepicker({
            dateFormat: "dd/mm/yy",
            changeMonth: true,
            changeYear: true,
            yearRange: "-104:+0",
            beforeShow: function () {
                jQuery(this).datepicker('option', 'minDate', jQuery('#sdate').val(), 'dd/mm/yy');
            }
        });
    });
    // delete Link
    $('.delete-link').live('click', function () {
        var deleteLinkObj = $(this);  //for future use

        $("#delete-dialog").dialog({
            title: "Confirmation",
            buttons: {
                Continue: function () {
                    $.post(deleteLinkObj[0].href, function (data) {  //Post to action
                        if (data.Status == 'true') {
                            var tr = deleteLinkObj.parents('tr:first');
                            tr.hide('fast'); //Hide Row
                        }
                        else {
                            //(optional) Display Error
                        }
                    });
                    $(this).dialog('close');
                },
                Close: function () {
                    $(this).dialog('close');
                }
            },
            dialogClass: 'dialog_css',
            width: 350,
            closeOnEscape: false,
            draggable: false,
            resizable: false,
            modal: true
        });
        return false; // prevents the default behaviour

    });
</script>

}

<script type="text/javascript">

    function beginPaging(args) {
        // Animate
        $('#grid-list').fadeOut('normal');
        $('#progress_panel').show();
    }

    function successPaging() {
        // Animate
        $('#grid-list').fadeIn('normal');
        $('a').tooltip();
        $('#progress_panel').hide();
    }

    function failurePaging() {
        alert("Could not retrieve list.");
    }


</script>




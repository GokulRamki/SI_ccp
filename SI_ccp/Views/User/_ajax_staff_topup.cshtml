@using MvcPaging
@model IPagedList<SI_ccp.Models.StaffTopupNewModel>

@if (Model.Count > 0)
{
    <table class="table table-bordered table-hover">

        <thead>

            <tr>
                <th>
                    Staff Name
                </th>
                <th>
                    Mobile Number
                </th>
                <th>
                    Topup Amount
                </th>
                <th>
                    Bundle Details
                </th>
                <th>
                    Balance Amount
                </th>
                <th>
                    Invoice
                </th>
                <th>
                    E-mail
                </th>
                <th>
                    Recharge Status
                </th>
                <th>
                    Active Status
                </th>
                <th>
                    Transaction Description
                </th>
                <th>
                    Transaction Date
                </th>
                <th>
                    Delete
                </th>
            </tr>

        </thead>
        <tbody>

            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @item.first_name&nbsp;@item.last_name
                </td>
                <td>
                    @item.msisdn_number
                </td>
                <td>
                    $&nbsp;@item.topup_amount
                </td>
                <td>
                    @if (item.bundle_name != null && !string.IsNullOrEmpty(item.bundle_name))
                    {
                        @*foreach (var bundle in item.staff_topup_bundle)
                {
                    tot_amt += bundle.bundle_amt;
                    <p><b>@bundle.bundle_name:</b> $&nbsp;@(bundle.bundle_amt)&nbsp;(@(bundle.is_recharged == true ? "Success" : "Failed"))</p>
                }*@
                        string bundle = item.bundle_name.Replace(";", " <br />");
                        HtmlString msg = new HtmlString(bundle);
                        <p>@msg</p>
                    }
                    else
                    {
                        <span>NA</span>
                    }
                </td>
                <td>
                    @{ decimal balance = Convert.ToDecimal(item.topup_amount) - Convert.ToDecimal(item.balance);}
                    $&nbsp;@balance
                </td>
                <td>
                    @item.invoice_number
                </td>
                <td>
                    @item.email
                </td>
                <td>
                    @(item.is_recharged == true ? "Success" : "Pending")
                </td>
                <td>
                    @(item.isactive == true ? "Active" : "Inactive")
                </td>
                <td>
                    @item.trans_desc
                </td>
                <td>
                    @item.trans_date
                </td>
                <td>
                    @if (item.is_recharged == false && item.is_processed == false)
                    {
                        <a class="delete-link" href="@Url.Action("delete_staff_msisdn", "User", new { id = item.staff_topup_id })">
                            <img src="~/img/grid/delete-icon.png" border="0" alt="Delete" />
                        </a>
                    }
                </td>
            </tr>
            }


        </tbody>
    </table>
    <div class="pager1">
        @Html.Raw(Ajax.Pager(
             new Options
             {
                 PageSize = Model.PageSize,
                 TotalItemCount = Model.TotalItemCount,
                 CurrentPage = Model.PageNumber,
                 ItemTexts = new ItemTexts() { Next = "Next", Previous = "Previous", Page = "P" },
                 ItemIcon = new ItemIcon() { First = "icon-backward", Previous = "icon-chevron-left", Next = "icon-chevron-right", Last = "icon-forward" },
                 TooltipTitles = new TooltipTitles() { Next = "Next page", Previous = "Previous page", Page = "Page {0}." },
                 Size = Size.normal,
                 Alignment = Alignment.centered,
                 IsShowControls = true,
                 IsShowFirstLast = true,
                 CssClass = ""
             },
             new AjaxOptions
             {
                 UpdateTargetId = "grid-list",
                 OnBegin = "beginPaging",
                 OnSuccess = "successPaging",
                 OnFailure = "failurePaging"
             }, new { controller = "User", action = "staffs_msisdn", staffs = ViewData["staffs"], msisdn = ViewData["msisdn"], invoice = ViewData["invoice"], sdate = ViewData["sdate"], edate = ViewData["edate"] }))


        <div class="well">
            Showing <span class="badge bg-color-greenLight">@Model.ItemStart</span> to <span class="badge bg-color-redLight">@Model.ItemEnd</span>
            of <span class="badge bg-color-blueLight">@Model.TotalItemCount</span> entries
        </div>
    </div>

}
else
{
    <div style="width: 100%; text-align: center; padding: 10px 0px 10px 0px;">Records Not found!</div>
}